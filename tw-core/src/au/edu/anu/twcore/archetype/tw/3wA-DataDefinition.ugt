tree
hasNode dataDefinitionSpec
	isOfClass = String("dataDefinition")
	hasParent = StringTable(([1]"3worlds:"))
	multiplicity = IntegerRange("1..1")

hasNode  dimSpec
	isOfClass = String("dimensioner")
	hasParent = StringTable(([1]"dataDefinition:"))
	multiplicity = IntegerRange("0..*")
	hasProperty dimNameSpec
		hasName = String("size")
		type = String("Integer")
		multiplicity = IntegerRange("1..1")
		mustSatisfyQuery dimIsInRangeQuerySpec
			className = String("au.edu.anu.twcore.archetype.tw.IsInRangeQuery")
			interval = IntTable(("[2]1,2147483647"))
hasNode  rngSpec
	isOfClass = String("rng")
	hasParent = StringTable(([1]"dataDefinition:"))
	multiplicity = IntegerRange("0..*")
	hasProperty dimAlgSpec
		hasName = String("algorithm")
		type = String("RngAlgType")
		multiplicity = IntegerRange("1..1")
	hasProperty dimSeedSpec
		hasName = String("seedSource")
		type = String("RngSeedSourceType")
		multiplicity = IntegerRange("1..1")
	hasProperty dimResetSpec
		hasName = String("resetTime")
		type = String("RngResetType")
		multiplicity = IntegerRange("1..1")
	hasProperty dimSeedIndexSpec
		hasName = String("tableIndex")
		type = String("Integer")
		multiplicity = IntegerRange("1..1")
		mustSatisfyQuery tableIndexIsInRangeQuerySpec
			className = String("au.edu.anu.twcore.archetype.tw.IsInRangeQuery")
			interval = IntTable(("[2]0,999"))

hasNode recordRootSpec
	isOfClass = String("record")
	hasParent = StringTable(([1]"dataDefinition:"))
	multiplicity = IntegerRange("0..*")
	mustSatisfyQuery recordRootNodeAtLeastOneChildLabelOfQuery
		className = String("au.edu.anu.twcore.archetype.tw.NodeAtLeastOneChildLabelOfQuery")
		childLabel = StringTable(([2]"field", "table"))
//	mustSatisfyQuery  recordRootNodeNameWithUppercaseQuery
//		className = String("au.edu.anu.twcore.archetype.tw.NameStartsWithUpperCaseQuery")

hasNode recordTableSpec
	isOfClass = String("record")
	hasParent = StringTable(([1]"table:"))
	multiplicity = IntegerRange("0..1")
	mustSatisfyQuery recordNodeAtLeastOneChildLabelOfQuery
		className = String("au.edu.anu.twcore.archetype.tw.NodeAtLeastOneChildLabelOfQuery")
		childLabel = StringTable(([2]"field", "table"))
//	mustSatisfyQuery  recordOfTableNameWithUppercaseQuery
//		className = String("au.edu.anu.twcore.archetype.tw.NameStartsWithUpperCaseQuery")


hasNode tableSpec
	isOfClass = String("table")
	hasParent = StringTable(([1]"record:"))
	multiplicity = IntegerRange("0..*")
	hasProperty dataElementTypeSpec
		hasName = String("dataElementType")
		type = String("DataElementType")
		multiplicity = IntegerRange("0..1")
	hasEdge dimEdgeSpec
		isOfClass = String("sizedBy")
		toNode = String("dimensioner:")
		multiplicity = IntegerRange("1..*")
		hasProperty dimRankSpec
			hasName = String("rank")
			type = String("Integer")
			multiplicity = IntegerRange("1..1")
	mustSatisfyQuery childXorPropertyQuerySpec
		className = String("au.edu.anu.twcore.archetype.tw.ChildXorPropertyQuery")
		edge_prop = StringTable(([2]"record","dataElementType"))
	hasProperty tableDescriptionSpec
		hasName = String("description")
		type = String("String")
		multiplicity = IntegerRange("0..1")
	hasProperty NumberTableUnitsSpec
		hasName = String("units")
		type = String("String")
		multiplicity = IntegerRange("0..1")
	mustSatisfyQuery NumberTableUnitsSpecCondition
		className = String("au.edu.anu.twcore.archetype.tw.RequirePropertyQuery")
		conditions = StringTable(([8]"units","dataElementType","Double","Float","Integer","Long","Short","Byte"))
	hasProperty RealNumberTablePrecSpec
		hasName = String("precision")
		type = String("Double")
		multiplicity = IntegerRange("0..1")
	mustSatisfyQuery RealNumberTablePrecSpecCondition
		className = String("au.edu.anu.twcore.archetype.tw.RequirePropertyQuery")
		conditions = StringTable(([4]"precision","dataElementType","Double","Float"))
	hasProperty TableRealNumberIntervalSpec
		hasName = String("interval")
		type = String("Interval")
		multiplicity = IntegerRange("0..1")
	mustSatisfyQuery TableRealNumberIntervalSpecCondition
		className = String("au.edu.anu.twcore.archetype.tw.RequirePropertyQuery")
		conditions = StringTable(([4]"interval","dataElementType","Double","Float"))
	hasProperty TableIntegerNumberRangeSpec
		hasName = String("range")
		type = String("IntegerRange")
		multiplicity = IntegerRange("0..1")
	mustSatisfyQuery TableIntegerNumberRangeSpecCondition
		className = String("au.edu.anu.twcore.archetype.tw.RequirePropertyQuery")
		conditions = StringTable(([7]"range","dataElementType","Integer","Long","Boolean","Short","Byte"))

hasNode recordFieldSpec
	isOfClass = String("field")
	hasParent = StringTable(([1]"record:"))
	multiplicity = IntegerRange("0..*")
	hasProperty recordFieldNamePropertySpec
		hasName = String("type")
		type = String("DataElementType")
		multiplicity = IntegerRange("1..1")
	hasProperty fieldDescriptionSpec
		hasName = String("description")
		type = String("String")
		multiplicity = IntegerRange("0..1")
	hasProperty NumberFieldUnitsSpec
		hasName = String("units")
		type = String("String")
		multiplicity = IntegerRange("0..1")
	mustSatisfyQuery NumberFieldUnitsSpecCondition
		className = String("au.edu.anu.twcore.archetype.tw.RequirePropertyQuery")
		conditions = StringTable(([8]"units","type","Double","Float","Integer","Long","Short","Byte"))
	hasProperty RealNumberFieldPrecSpec
		hasName = String("precision")
		type = String("Double")
		multiplicity = IntegerRange("0..1")
	mustSatisfyQuery RealNumberFieldPrecSpecCondition
		className = String("au.edu.anu.twcore.archetype.tw.RequirePropertyQuery")
		conditions = StringTable(([4]"precision","type","Double","Float"))
	hasProperty RealNumberIntervalSpec
		hasName = String("interval")
		type = String("Interval")
		multiplicity = IntegerRange("0..1")
	mustSatisfyQuery RealNumberIntervalSpecCondition
		className = String("au.edu.anu.twcore.archetype.tw.RequirePropertyQuery")
		conditions = StringTable(([4]"interval","type","Double","Float"))
	hasProperty IntegerNumberRangeSpec
		hasName = String("range")
		type = String("IntegerRange")
		multiplicity = IntegerRange("0..1")
	mustSatisfyQuery IntegerNumberRangeSpecCondition
		className = String("au.edu.anu.twcore.archetype.tw.RequirePropertyQuery")
		conditions = StringTable(([7]"range","type","Integer","Long","Short","Byte"))
