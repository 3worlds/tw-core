tree
	scope =            String("3W-archetype")
	archetype =        String("au.edu.anu.rscs.aot.archetype.ArchetypeRootSpec")
	hasNode =          String("au.edu.anu.rscs.aot.archetype.NodeSpec")
	hasProperty =      String("au.edu.anu.rscs.aot.archetype.PropertySpec")
	hasEdge =          String("au.edu.anu.rscs.aot.archetype.EdgeSpec")
	mustSatisfyQuery = String("au.edu.anu.rscs.aot.archetype.ConstraintSpec")

archetype 3wSA-RangeTimeSeriesWidget1

	hasNode RangeTimeSeriesWidget1Spec
		isOfClass = String("widget")
		hasParent = StringTable(([4]"top:","bottom:","tab:","container:"))
		multiplicity = IntegerRange("0..*")
		
		hasProperty RangeTimeSeriesWidget1LowerSenderProperty
			hasName = String("senderLower")
			type = String("Integer")
			multiplicity = IntegerRange("1..1")
			mustSatisfyQuery RangeTimeSeriesWidget1MaxAxesInRangeQuery
				className = String("au.edu.anu.twcore.archetype.tw.IsInRangeQuery")
				interval = IntTable(([2]0,2147483647))
			
		hasProperty RangeTimeSeriesWidget1RangeSenderProperty
			hasName = String("senderRange")
			type = String("Integer")
			multiplicity = IntegerRange("1..1")
			mustSatisfyQuery RangeTimeSeriesWidget1MaxAxesInRangeQuery
				className = String("au.edu.anu.twcore.archetype.tw.IsInRangeQuery")
				interval = IntTable(([2]0,2147483647))
		
		hasProperty RangeTimeSeriesWidget1maxAxesProperty
			hasName = String("maxAxes")
			type = String("Integer")
			multiplicity = IntegerRange("0..1")
			mustSatisfyQuery RangeTimeSeriesWidget1MaxAxesInRangeQuery
				className = String("au.edu.anu.twcore.archetype.tw.IsInRangeQuery")
				interval = IntTable(([2]1,10))
		
		hasProperty RangeTimeSeriesWidget1BufferSizeProperty
			hasName = String("bufferSize")
			type = String("Integer")
			multiplicity = IntegerRange("0..1")
			mustSatisfyQuery SimpleTimeWidgetBufferSizeInRangeQuery
				className = String("au.edu.anu.twcore.archetype.tw.IsInRangeQuery")
				interval = IntTable(([2]10,10000))
		
		mustSatisfyQuery RangeTimeSeriesWidget1ParentClassQuery
			className = String("au.edu.anu.twcore.archetype.tw.ParentLabelQuery")
			parentLabels = StringTable(([2]"tab","container"))

		hasEdge RangeTimeSeriesWidget1DataTrackerEdgeSpec
			isOfClass = String("trackSeries")
			toNode = String("dataTracker:")
			multiplicity = IntegerRange("1..1")
			

