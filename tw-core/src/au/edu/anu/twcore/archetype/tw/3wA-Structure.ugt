tree
hasNode structureSpec
	isOfClass = String("structure")
	hasParent = StringTable(([1]"system:"))
	multiplicity = IntegerRange("1..1")
	
hasNode categorySetRootSpec
	isOfClass = String("categorySet")
	hasParent = StringTable(([1]"structure:"))
	multiplicity = IntegerRange("1..*")

hasNode categorySetSpec 
	isOfClass = String("categorySet")
	hasParent = StringTable(([1]"category:"))
	multiplicity = IntegerRange("0..*")

hasNode categorySpec
	isOfClass = String("category")
	hasParent = StringTable(([1]"categorySet:"))
	multiplicity = IntegerRange("1..*")
	hasEdge edgeToDriversSpec
		isOfClass = String("drivers")
		toNode = String("record")
		multiplicity = IntegerRange("0..1")
	hasEdge edgeToDecoratorsSpec
		isOfClass = String("decorators")
		toNode = String("record")
		multiplicity = IntegerRange("0..1")
	hasEdge edgeToParametersSpec
		isOfClass = String("parameters")
		toNode = String("record")
		multiplicity = IntegerRange("0..1")
		
hasNode componentSpec
	isOfClass = String("component")
	hasParent = StringTable(([1]"structure:"))
	multiplicity = IntegerRange("0..*") //?
	// edgeTo lifeCycle transformations
	
//hasNode realisedComponentpec
//	isOfClass = String("realisedComponent")
//	hasParent = StringTable(([1]"component:"))
//	multiplicity = IntegerRange("1..1") //?

hasNode initialisationSpec
	isOfClass = String("initialiser")
	hasParent = StringTable(([1]"realisation:"))
	multiplicity = IntegerRange("0..1") //?

hasNode relationTypeSpec
	isOfClass = String("relationType")
	hasParent = StringTable(([1]"structure:"))
	multiplicity = IntegerRange("0..*")
	// from / to edges

	