tree
// Sub-archetype for 3Worlds for checking RelateToDecision specifications
	scope =            String("3W-archetype")
	archetype =        String("au.edu.anu.rscs.aot.archetype.ArchetypeRootSpec")
	hasNode =          String("au.edu.anu.rscs.aot.archetype.NodeSpec")
	hasProperty =      String("au.edu.anu.rscs.aot.archetype.PropertySpec")
	hasEdge =          String("au.edu.anu.rscs.aot.archetype.EdgeSpec")
	mustSatisfyQuery = String("au.edu.anu.rscs.aot.archetype.ConstraintSpec")

archetype 3wSA-RelateToDecision

	hasNode RelateToDecisionFunctionSpec
		isOfClass = String("function")
		hasParent = StringTable(([1]"process:"))
		multiplicity = IntegerRange("0..*")
		// the maximal search distance for all variables - implies a spherical 
		// search in the variable space, ie all variables are on the same scale
		hasProperty RelateToDecisionDistanceSpec
			hasName = String("maxSearchRadius")
			type = String("Double")
			multiplicity = IntegerRange("0..1")
		hasEdge RelateToDecisionVariableEdge
			isOfClass = String("space")
			toNode = String("field:")
			multiplicity = IntegerRange("0..*")
			mustSatisfyQuery validSpaceVariableCategory
				className = String("au.edu.anu.twcore.archetype.tw.FindCommonCategoryQuery")
			mustSatisfyQuery SpaceVariableMustHaveMinAndMax
				className = String("au.edu.anu.twcore.archetype.tw.EndNodeHasPropertyQuery")
				requiredVar = String("interval")
			// the maximal search distance for each variable - implies a rectangular 
			// search in the variable space, ie each variable has its own scale
			hasProperty RelateToDecisionDistanceEdgeSpec
				hasName = String("maxSearchDistance")
				type = String("Double")
				multiplicity = IntegerRange("0..1")
      