tree
// Sub-archetype for 3Worlds for checking ClockTimer specifications
	scope =            String("3W-archetype")
	archetype =        String("au.edu.anu.aot.archetype.ArchetypeRootSpec")
	hasNode =          String("au.edu.anu.aot.archetype.NodeSpec")
	hasProperty =      String("au.edu.anu.aot.archetype.PropertySpec")
	hasEdge =          String("au.edu.anu.aot.archetype.EdgeSpec")
	mustSatisfyQuery = String("au.edu.anu.aot.archetype.ConstraintSpec")

archetype 3wSA-ClockTimer

	hasNode ClockTimerSpec
		isOfClass = String("timer")
		hasParent = StringTable(([1]"timeline:"))
		multiplicity = IntegerRange("0..*")
		
		hasProperty clockTimerDtPropertySpec
			hasName = String("dt")
			type = String("Long")
			multiplicity = IntegerRange("1..1")
			mustSatisfyQuery isInRangeQueryDtClockTimerSpec
				className = String("au.edu.anu.twcore.archetype.tw.IsInRangeQuery")
				interval = LongTable(([2]1,9223372036854775807)) 
				
		hasProperty timeUnitPropertySpec
			hasName = String("timeUnit")
			type =  String("TimeUnits")
			multiplicity = IntegerRange("1..1")
		
		hasProperty
			hasName = String("nTimeUnits")
			type = String("Integer")
			multiplicity = IntegerRange("1..1")
			mustSatisfyQuery nTimeUnitsIsInRangeQuery
				className = String("au.edu.anu.twcore.archetype.tw.IsInRangeQuery")
				interval = IntTable(([2]1,2147483647))
		
		mustSatisfyQuery timeUnitTimeUnitValidityQuery
			className = String("au.edu.anu.twcore.archetype.tw.TimeUnitValidityQuery")
			values = StringTable(([2]"timeUnit","scale"))

		hasProperty clockTimerOffsetPropertySpec
			hasName = String("offset")
			type = String("Double")
			multiplicity = IntegerRange("0..1")
			mustSatisfyQuery isInRangeQueryOffsetClockTimerSpec
				className = String("au.edu.anu.twcore.archetype.tw.IsInRangeQuery")
				interval = DoubleTable(([2]0.0,1E308)) 
