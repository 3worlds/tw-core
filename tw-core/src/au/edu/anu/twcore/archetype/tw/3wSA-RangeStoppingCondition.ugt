tree
// Sub-archetype for 3Worlds for checking RangeStoppingCondition specifications
	scope =            String("3W-archetype")
	archetype =        String("au.edu.anu.aot.archetype.ArchetypeRootSpec")
	hasNode =          String("au.edu.anu.aot.archetype.NodeSpec")
	hasProperty =      String("au.edu.anu.aot.archetype.PropertySpec")
	hasEdge =          String("au.edu.anu.aot.archetype.EdgeSpec")
	mustSatisfyQuery = String("au.edu.anu.aot.archetype.ConstraintSpec")

archetype 3wSA-RangeStoppingCondition

	hasNode RangeStoppingConditionSpec
		isOfClass = String("stoppingCondition")
		hasParent = StringTable(([1]"dynamics:"))
		multiplicity = IntegerRange("0..1")
		hasProperty RangeStoppingConditionStopVariablePropertySpec
			hasName = String("stopVariable")
			type = String("String")
			multiplicity = IntegerRange("1..1")
		// TODO: check that variable exists in component
		hasProperty StoppingConditionStopRangePropertySpec
			hasName = String("range")
			type = String("Interval")
			multiplicity = IntegerRange("1..1")
		hasEdge RangeStoppingConditionComponentSpec
			isOfClass = String("stopSystem")
			toNode = String("component:")
			multiplicity = IntegerRange("0..1")
		hasEdge RangeStoppingConditionArenaSpec
			isOfClass = String("stopSystem")
			toNode = String("system:")
			multiplicity = IntegerRange("0..1")
		mustSatisfyQuery "Stopping condition has an edge either to a component or to the arena"
			className = String("au.edu.anu.twcore.archetype.tw.OutNodeXorQuery")
			nodeLabel1 = String("component")
			nodeLabel2 = String("system")
