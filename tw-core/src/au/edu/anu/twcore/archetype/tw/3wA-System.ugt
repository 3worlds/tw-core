tree
	hasNode =          String("au.edu.anu.rscs.aot.archetype.NodeSpec")
	hasProperty =      String("au.edu.anu.rscs.aot.archetype.PropertySpec")
	hasEdge =          String("au.edu.anu.rscs.aot.archetype.EdgeSpec")
	mustSatisfyQuery = String("au.edu.anu.rscs.aot.archetype.ConstraintSpec")

hasNode systemSpec
	isOfClass = String("system")
	hasParent = StringTable([1]"3worlds")
	multiplicity = IntegerRange("1..*")
	hasProperty systemNameSpec
		hasName = String("name")
		type = String("String")
		multiplicity = IntegerRange("1..1")
	hasProperty systemClassSpec
		hasName = String("className")
		type = String("String")
		multiplicity = IntegerRange("1..1")
		mustSatisfyQuery systemClassIsInValueSetQuery
			className = au.edu.anu.rscs.aot.collections.tables.StringTable([1],"IsInValueSetQuery")
			values = StringTable([1],"xxx.yyy.zzz.World")
	hasProperty memorySpec
		hasName = String("memory")
		type = String("Integer")
		multiplicity = IntegerRange("1..1")// should have an integer range constraint
		
