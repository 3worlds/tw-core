tree
	scope =            String("3W-archetype")
	archetype =        String("au.edu.anu.aot.archetype.ArchetypeRootSpec")
	hasNode =          String("au.edu.anu.aot.archetype.NodeSpec")
	hasProperty =      String("au.edu.anu.aot.archetype.PropertySpec")
	hasEdge =          String("au.edu.anu.aot.archetype.EdgeSpec")
	mustSatisfyQuery = String("au.edu.anu.aot.archetype.ConstraintSpec")

archetype 3wSA-SimpleTimeSeriesWidget

	hasNode SimpleTimeSeriesWidgetSpec
		isOfClass = String("widget")
		hasParent = StringTable(([4]"top:","bottom:","tab:","container:"))
		multiplicity = IntegerRange("0..*")
		mustSatisfyQuery SenderInRangeQuery
			className = String("au.edu.anu.twcore.archetype.tw.SenderInRangeQuery")
		
		hasProperty SimpleTimeSeriesWidgetSenderProperty
			hasName = String("simId")
			type = String("Integer")
			multiplicity = IntegerRange("0..1")
		
		hasProperty SimpleTimeSeriesWidgetmaxAxesProperty
			hasName = String("maxAxes")
			type = String("Integer")
			multiplicity = IntegerRange("0..1")
			mustSatisfyQuery SimpleTimeWidgetMaxAxesInRangeQuery
				className = String("au.edu.anu.twcore.archetype.tw.IsInRangeQuery")
				interval = IntTable(([2]1,10))
		// DefaultShowLegend
		// DefaultLegendPosition.
		hasProperty SimpleTimeSeriesWidgetBufferSizeProperty
			hasName = String("bufferSize")
			type = String("Integer")
			multiplicity = IntegerRange("0..1")
			mustSatisfyQuery SimpleTimeWidgetBufferSizeInRangeQuery
				className = String("au.edu.anu.twcore.archetype.tw.IsInRangeQuery")
				interval = IntTable(([2]10,10000))
		
		mustSatisfyQuery SimpleTimeWidgetParentClassQuery
			className = String("au.edu.anu.twcore.archetype.tw.ParentLabelQuery")
			parentLabels = StringTable(([2]"tab","container"))

		hasEdge SimpleTimeSeriesWidgetDataTrackerEdgeSpec
			isOfClass = String("trackSeries")
			toNode = String("dataTracker:")
			multiplicity = IntegerRange("1..1")
			
			

		// TODO: must check that the edge end node has property subclass==
		// au.edu.anu.twcore.ecosystem.runtime.tracking.TimeSeriesTracker

