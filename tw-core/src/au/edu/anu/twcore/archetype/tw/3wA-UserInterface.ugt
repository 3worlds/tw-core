tree
hasNode userInterfaceSpec
	isOfClass = String("userInterface")
	hasParent = StringTable(([1]"3worlds:"))
	multiplicity = IntegerRange("1..1")

hasNode topSpec
	isOfClass = String("top")
	hasParent = StringTable(([1]"userInterface:"))
	multiplicity = IntegerRange("0..1")
	// must have at least one child widget

hasNode bottomSpec
	isOfClass = String("bottom")
	hasParent = StringTable(([1]"userInterface:"))
	multiplicity = IntegerRange("0..1")
	// must have at least one child widget

// TODO: not sure yet how to arrange all this recursively - more or less along the lines of category sets and categories
hasNode tabSpec 
	isOfClass = String("tab")
	hasParent = StringTable(([1]"userInterface:"))
	multiplicity = IntegerRange("1..*")
	
hasNode gridRootSpec
	isOfClass = String("grid")
	hasParent = StringTable(([1]"tab:"))
	multiplicity = IntegerRange("1..1")
	
hasNode gridgridSpec
	isOfClass = String("grid")
	hasParent = StringTable(([1]"grid:"))
	multiplicity = IntegerRange("0..*")

hasNode widgetSpec
	isOfClass = String("widget")
	hasParent = StringTable(([3]"top:","bottom:","grid:"))
	multiplicity = IntegerRange("0..*")
	hasProperty widgetOrder
		hasName = String("order")		
		type = String("Integer")
		multiplicity = IntegerRange("1..1")
	hasProperty widgetClass
		hasName = String("subclass")		
		type = String("String")
		multiplicity = IntegerRange("1..1")
		mustSatisfyQuery widgetClassInValueSetQuery
			className = String("au.edu.anu.twcore.archetype.tw.IsInValueSetQuery") 
			values = StringTable(([5]+
			"au.edu.anu.twuifx.widgets.SingleGridWidget",+
			"au.edu.anu.twuifx.widgets.TimeDisplayWidget",+
			"au.edu.anu.twuifx.widgets.SimpleSimCtrlWidget",+
			"au.edu.anu.twuifx.widgets.TimeSeriesPlotWidget",+
			"au.edu.anu.twuifx.widgets.LabelValuePair"))
