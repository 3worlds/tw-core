tree
hasNode userInterfaceSpec
	isOfClass = String("userInterface")
	hasParent = StringTable(([1]"3worlds:"))
	multiplicity = IntegerRange("0..1")

hasNode topSpec
	isOfClass = String("top")
	hasParent = StringTable(([1]"userInterface:"))
	multiplicity = IntegerRange("0..1")
	// must have at least one child widget

hasNode bottomSpec
	isOfClass = String("bottom")
	hasParent = StringTable(([1]"userInterface:"))
	multiplicity = IntegerRange("0..1")
	// must have at least one child widget

// tab is, effectively, the root container
hasNode tabSpec 
	isOfClass = String("tab")
	hasParent = StringTable(([1]"userInterface:"))
	multiplicity = IntegerRange("0..*")
	hasProperty tabOrientation
		hasName = String("orientation")
		type = String("UIContainerOrientation")
		multiplicity = IntegerRange("1..1")
	mustSatisfyQuery TabChildAtLeastOneOfOneOrTwoOfTwoQuery
		className = String("au.edu.anu.twcore.archetype.tw.ChildAtLeastOneOfOneOrTwoOfTwoQuery")
		nodeLabel1 = String("widget")
		nodeLabel2 = String("container")
	
hasNode containerSpec
	isOfClass = String("container")
	hasParent = StringTable(([2]"tab:","container:"))
	multiplicity = IntegerRange("0..*")
	hasProperty containerOrient
		hasName = String("orientation")
		type = String("UIContainerOrientation")
		multiplicity = IntegerRange("1..1")
	hasProperty containerOrder
		hasName = String("order")		
		type = String("Integer")
		multiplicity = IntegerRange("1..1")
	mustSatisfyQuery ContainerChildAtLeastOneOfOneOrTwoOfTwoQuery
		className = String("au.edu.anu.twcore.archetype.tw.ChildAtLeastOneOfOneOrTwoOfTwoQuery")
		nodeLabel1 = String("widget")
		nodeLabel2 = String("container")
		
	
hasNode widgetSpec
	isOfClass = String("widget")
	hasParent = StringTable(([4]"top:","bottom:","tab:","container:"))
	multiplicity = IntegerRange("0..*")
	hasProperty widgetOrder
		hasName = String("order")		
		type = String("Integer")
		multiplicity = IntegerRange("1..1")
	hasProperty widgetClass
		hasName = String("subclass")		
		type = String("String")
		multiplicity = IntegerRange("1..1")
		mustSatisfyQuery widgetClassInValueSetQuery
			className = String("au.edu.anu.twcore.archetype.tw.IsInValueSetQuery") 
			values = StringTable(([6]+
			"au.edu.anu.twuifx.widgets.SimpleD0Widget",+
			"au.edu.anu.twuifx.widgets.SimpleD2Widget",+
			"au.edu.anu.twuifx.widgets.SimpleTimeWidget",+
			"au.edu.anu.twuifx.widgets.SimpleControlWidget",+
			"au.edu.anu.twuifx.widgets.SimpleTimeSeriesWidget",+
			"au.edu.anu.twuifx.widgets.SimpleWidget"))
	mustSatisfyQuery CheckSubArchetypeQuerySimpleD0Widget
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.SimpleD0Widget","3wSA-SimpleD0Widget.ugt"))

	mustSatisfyQuery CheckSubArchetypeQuerySimpleD2Widget
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.SimpleD2Widget","3wSA-SimpleD2Widget.ugt"))

	mustSatisfyQuery CheckSubArchetypeQueryTimeWidget
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.SimpleTimeWidget","3wSA-SimpleTimeWidget.ugt"))

	mustSatisfyQuery CheckSubArchetypeQuerySimpleTimeSeriesWidget
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.SimpleTimeSeriesWidget","3wSA-SimpleTimeSeriesWidget.ugt"))

	mustSatisfyQuery CheckSubArchetypeQuerySimpleWidget
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.SimpleWidget","3wSA-SimpleWidget.ugt"))

	mustSatisfyQuery CheckSubArchetypeQuerySimpleControlWidget
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.SimpleControlWidget","3wSA-SimpleControlWidget.ugt"))
			