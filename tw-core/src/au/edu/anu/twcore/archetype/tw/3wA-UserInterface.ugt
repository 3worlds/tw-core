tree
hasNode userInterfaceSpec
	isOfClass = String("userInterface")
	hasParent = StringTable(([1]"3worlds:"))
	multiplicity = IntegerRange("0..1")

hasNode topSpec
	isOfClass = String("top")
	hasParent = StringTable(([1]"userInterface:"))
	multiplicity = IntegerRange("0..1")
	// must have at least one child widget

hasNode bottomSpec
	isOfClass = String("bottom")
	hasParent = StringTable(([1]"userInterface:"))
	multiplicity = IntegerRange("0..1")
	// must have at least one child widget

// tab is, effectively, the root container
hasNode tabSpec 
	isOfClass = String("tab")
	hasParent = StringTable(([1]"userInterface:"))
	multiplicity = IntegerRange("0..*")
	hasProperty tabOrientation
		hasName = String("orientation")
		type = String("UIContainerOrientation")
		multiplicity = IntegerRange("1..1")
	
hasNode containerSpec
	isOfClass = String("container")
	hasParent = StringTable(([2]"tab:","container:"))
	multiplicity = IntegerRange("0..*")
	hasProperty containerOrient
		hasName = String("orientation")
		type = String("UIContainerOrientation")
		multiplicity = IntegerRange("1..1")
	hasProperty containerOrder
		hasName = String("order")		
		type = String("Integer")
		multiplicity = IntegerRange("1..1")
		
	
hasNode widgetSpec
	isOfClass = String("widget")
	// This hasParent probably has to be removed so each sub-arch determines what is possible
	// Still, I'm not sure mm's design would support this at the moment.
	hasParent = StringTable(([4]"top:","bottom:","tab:","container:"))
	multiplicity = IntegerRange("0..*")
	hasProperty widgetOrder
		hasName = String("order")		
		type = String("Integer")
		multiplicity = IntegerRange("1..1")
	hasProperty widgetClass
		hasName = String("subclass")		
		type = String("String")
		multiplicity = IntegerRange("1..1")
		mustSatisfyQuery widgetClassInValueSetQuery
			className = String("au.edu.anu.twcore.archetype.tw.IsInValueSetQuery") 
			values = StringTable(([5]+
			"au.edu.anu.twuifx.widgets.SingleGridWidget",+
			"au.edu.anu.twuifx.widgets.TimeDisplayWidget",+
			"au.edu.anu.twuifx.widgets.ExperimentControlWidget",+
			"au.edu.anu.twuifx.widgets.TimeSeriesPlotWidget",+
			"au.edu.anu.twuifx.widgets.LabelValuePair"))
	mustSatisfyQuery CheckSubArchetypeQueryWidgetClass
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"widgetClass","au.edu.anu.twuifx.widgets.TimeDisplayWidget","3wSA-TimeDisplayWidget.ugt"))
			