tree
hasNode userInterfaceSpec
	isOfClass = String("userInterface")
	hasParent = StringTable(([1]"3worlds:"))
	multiplicity = IntegerRange("1..1")
	mustSatisfyQuery musthaveStateMachineControllerQuery
		className = String("au.edu.anu.twcore.archetype.tw.UIStateMachineControllerQuery")
	mustSatisfyQuery UICanStopQuery
		className = String("au.edu.anu.twcore.archetype.tw.UICanStopQuery")
	mustSatisfyQuery recordNodeAtLeastOneChildLabelOfQuery
		className = String("au.edu.anu.twcore.archetype.tw.NodeAtLeastOneChildLabelOfQuery")
		childLabel = StringTable(([4]"top", "bottom","tab","headless"))

hasNode headlessSpec
	isOfClass = String("headless")
	hasParent = StringTable(([1]"userInterface:"))
	multiplicity = IntegerRange("0..1")
	// must have at least one child widget headless widget

hasNode HLwidgetSpec
	isOfClass = String("widget")
	hasParent = StringTable(([1]"headless:"))
	multiplicity = IntegerRange("0..*")
	hasProperty hlWidgetClass
		hasName = String("subclass")
		type = String("String")
		multiplicity = IntegerRange("1..1")
		mustSatisfyQuery hlwidgetClassInValueSetQuery
			className = String("au.edu.anu.twcore.archetype.tw.IsInValueSetQuery")
			values = StringTable(([2]+
			"au.edu.anu.twuifx.widgets.headless.HLExperimentWidget1",+
			"au.edu.anu.twuifx.widgets.headless.HLSimpleControlWidget"))

	mustSatisfyQuery CheckSubArchetypeQuerySimpleTimeSeriesWidget2
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.headless.HLExperimentWidget1","3wSA-HLExperimentWidget1.ugt"))

	mustSatisfyQuery CheckSubArchetypeQuerySimpleControlWidget2
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.headless.HLSimpleControlWidget","3wSA-HLSimpleControlWidget.ugt"))

hasNode topSpec
	isOfClass = String("top")
	hasParent = StringTable(([1]"userInterface:"))
	multiplicity = IntegerRange("0..1")
	// must have at least one child widget
	mustSatisfyQuery coordinateRanksAreDifferentQuery1
		className = String("au.edu.anu.twcore.archetype.tw.RankingPropertyQuery")
		parameters = StringTable(([2]"_CHILD","order"))

hasNode bottomSpec
	isOfClass = String("bottom")
	hasParent = StringTable(([1]"userInterface:"))
	multiplicity = IntegerRange("0..1")
	// must have at least one child widget
	mustSatisfyQuery coordinateRanksAreDifferentQuery2
		className = String("au.edu.anu.twcore.archetype.tw.RankingPropertyQuery")
		parameters = StringTable(([2]"_CHILD","order"))

// tab is, effectively, the root container
hasNode tabSpec
	isOfClass = String("tab")
	hasParent = StringTable(([1]"userInterface:"))
	multiplicity = IntegerRange("0..*")
	hasProperty tabOrientation
		hasName = String("orientation")
		type = String("UIContainerOrientation")
		multiplicity = IntegerRange("1..1")
	mustSatisfyQuery TabChildAtLeastOneOfOneOrTwoOfTwoQuery
		className = String("au.edu.anu.twcore.archetype.tw.ChildAtLeastOneOfOneOrTwoOfTwoQuery")
		nodeLabel1 = String("widget")
		nodeLabel2 = String("container")
	mustSatisfyQuery coordinateRanksAreDifferentQuery3
		className = String("au.edu.anu.twcore.archetype.tw.RankingPropertyQuery")
		parameters = StringTable(([2]"_CHILD","order"))

hasNode containerSpec
	isOfClass = String("container")
	hasParent = StringTable(([2]"tab:","container:"))
	multiplicity = IntegerRange("0..*")
	hasProperty containerOrient
		hasName = String("orientation")
		type = String("UIContainerOrientation")
		multiplicity = IntegerRange("1..1")
	hasProperty containerOrder
		hasName = String("order")
		type = String("Integer")
		multiplicity = IntegerRange("1..1")
	mustSatisfyQuery ContainerChildAtLeastOneOfOneOrTwoOfTwoQuery
		className = String("au.edu.anu.twcore.archetype.tw.ChildAtLeastOneOfOneOrTwoOfTwoQuery")
		nodeLabel1 = String("widget")
		nodeLabel2 = String("container")
	mustSatisfyQuery coordinateRanksAreDifferentQuery4
		className = String("au.edu.anu.twcore.archetype.tw.RankingPropertyQuery")
		parameters = StringTable(([2]"_CHILD","order"))


hasNode widgetSpec
	isOfClass = String("widget")
	hasParent = StringTable(([4]"bottom:","top:","tab:","container:"))
	multiplicity = IntegerRange("0..*")
	hasProperty widgetOrder
		hasName = String("order")
		type = String("Integer")
		multiplicity = IntegerRange("1..1")
	hasProperty widgetClass
		hasName = String("subclass")
		type = String("String")
		multiplicity = IntegerRange("1..1")
		mustSatisfyQuery widgetClassInValueSetQuery
			className = String("au.edu.anu.twcore.archetype.tw.IsInValueSetQuery")
			values = StringTable(([12]+
			"au.edu.anu.twuifx.widgets.TableWidget1",+
			"au.edu.anu.twuifx.widgets.MatrixWidget1",+
			"au.edu.anu.twuifx.widgets.ControlWidget1",+
			"au.edu.anu.twuifx.widgets.ControlWidget2",+
			"au.edu.anu.twuifx.widgets.ControlWidget3",+
			"au.edu.anu.twuifx.widgets.SpaceWidget1",+
			"au.edu.anu.twuifx.widgets.TimeSeriesWidget1",+
			"au.edu.anu.twuifx.widgets.ScatterPlotWidget1",+
			"au.edu.anu.twuifx.widgets.GraphWidget1",+
			"au.edu.anu.twuifx.widgets.ProgressWidget1",+
			"au.edu.anu.twuifx.widgets.ProgressWidget2",+
			"au.edu.anu.twuifx.widgets.ProgressWidget3"))

	mustSatisfyQuery CheckSubArchetypeQueryTableWidget1
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.TableWidget1","3wSA-TableWidget1.ugt"))

	mustSatisfyQuery CheckSubArchetypeQueryMatrixWidget1
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.MatrixWidget1","3wSA-MatrixWidget1.ugt"))

	mustSatisfyQuery CheckSubArchetypeQuerySpaceWidget1
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.SpaceWidget1","3wSA-SpaceWidget1.ugt"))

	mustSatisfyQuery CheckSubArchetypeQueryControlWidget1
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.ControlWidget1","3wSA-ControlWidget1.ugt"))

	mustSatisfyQuery CheckSubArchetypeQueryControlWidget2
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.ControlWidget2","3wSA-ControlWidget2.ugt"))

	mustSatisfyQuery CheckSubArchetypeQueryControlWidget3
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.ControlWidget3","3wSA-ControlWidget3.ugt"))

	mustSatisfyQuery CheckSubArchetypeQueryScatterPlotWidget1
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.ScatterPlotWidget1","3wSA-ScatterPlotWidget1.ugt"))

	mustSatisfyQuery CheckSubArchetypeQueryTimeSeriesWidget1
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.TimeSeriesWidget1","3wSA-TimeSeriesWidget1.ugt"))

	mustSatisfyQuery CheckSubArchetypeQueryGraphWidget1
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.GraphWidget1","3wSA-GraphWidget1.ugt"))

	mustSatisfyQuery CheckSubArchetypeQueryProgressWidget1
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.ProgressWidget1","3wSA-ProgressWidget1.ugt"))

	mustSatisfyQuery CheckSubArchetypeQueryProgressWidget2
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.ProgressWidget2","3wSA-ProgressWidget2.ugt"))

	mustSatisfyQuery CheckSubArchetypeQueryProgressWidget3
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.ProgressWidget3","3wSA-ProgressWidget3.ugt"))

