tree
hasNode userInterfaceSpec
	isOfClass = String("userInterface")
	hasParent = StringTable(([1]"3worlds:"))
	multiplicity = IntegerRange("1..1")
	mustSatisfyQuery musthaveStateMachineControllerQuery
		className = String("au.edu.anu.twcore.archetype.tw.UIStateMachineControllerQuery")
	mustSatisfyQuery UICanStopQuery
		className = String("au.edu.anu.twcore.archetype.tw.UICanStopQuery")
	mustSatisfyQuery recordNodeAtLeastOneChildLabelOfQuery
		className = String("au.edu.anu.twcore.archetype.tw.NodeAtLeastOneChildLabelOfQuery")
		childLabel = StringTable(([4]"top", "bottom","tab","headless"))

hasNode headlessSpec
	isOfClass = String("headless")
	hasParent = StringTable(([1]"userInterface:"))
	multiplicity = IntegerRange("0..1")
	// must have at least one child widget headless widget

hasNode HLwidgetSpec
	isOfClass = String("widget")
	hasParent = StringTable(([1]"headless:"))
	multiplicity = IntegerRange("0..*")
	hasProperty hlWidgetClass
		hasName = String("subclass")
		type = String("String")
		multiplicity = IntegerRange("1..1")
		mustSatisfyQuery hlwidgetClassInValueSetQuery
			className = String("au.edu.anu.twcore.archetype.tw.IsInValueSetQuery")
			values = StringTable(([2]+
			"au.edu.anu.twuifx.widgets.headless.HLSimpleTimeSeriesWidget",+
			"au.edu.anu.twuifx.widgets.headless.HLSimpleControlWidget"))

	mustSatisfyQuery CheckSubArchetypeQuerySimpleTimeSeriesWidget2
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.headless.HLSimpleTimeSeriesWidget","3wSA-HLSimpleTimeSeriesWidget.ugt"))
	mustSatisfyQuery CheckSubArchetypeQuerySimpleControlWidget2
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.headless.HLSimpleControlWidget","3wSA-HLSimpleControlWidget.ugt"))

hasNode topSpec
	isOfClass = String("top")
	hasParent = StringTable(([1]"userInterface:"))
	multiplicity = IntegerRange("0..1")
	// must have at least one child widget
	mustSatisfyQuery coordinateRanksAreDifferentQuery1
		className = String("au.edu.anu.twcore.archetype.tw.RankingPropertyQuery")
		parameters = StringTable(([2]"_CHILD","order"))

hasNode bottomSpec
	isOfClass = String("bottom")
	hasParent = StringTable(([1]"userInterface:"))
	multiplicity = IntegerRange("0..1")
	// must have at least one child widget
	mustSatisfyQuery coordinateRanksAreDifferentQuery2
		className = String("au.edu.anu.twcore.archetype.tw.RankingPropertyQuery")
		parameters = StringTable(([2]"_CHILD","order"))

// tab is, effectively, the root container
hasNode tabSpec
	isOfClass = String("tab")
	hasParent = StringTable(([1]"userInterface:"))
	multiplicity = IntegerRange("0..*")
	hasProperty tabOrientation
		hasName = String("orientation")
		type = String("UIContainerOrientation")
		multiplicity = IntegerRange("1..1")
	mustSatisfyQuery TabChildAtLeastOneOfOneOrTwoOfTwoQuery
		className = String("au.edu.anu.twcore.archetype.tw.ChildAtLeastOneOfOneOrTwoOfTwoQuery")
		nodeLabel1 = String("widget")
		nodeLabel2 = String("container")
	mustSatisfyQuery coordinateRanksAreDifferentQuery3
		className = String("au.edu.anu.twcore.archetype.tw.RankingPropertyQuery")
		parameters = StringTable(([2]"_CHILD","order"))

hasNode containerSpec
	isOfClass = String("container")
	hasParent = StringTable(([2]"tab:","container:"))
	multiplicity = IntegerRange("0..*")
	hasProperty containerOrient
		hasName = String("orientation")
		type = String("UIContainerOrientation")
		multiplicity = IntegerRange("1..1")
	hasProperty containerOrder
		hasName = String("order")
		type = String("Integer")
		multiplicity = IntegerRange("1..1")
	mustSatisfyQuery ContainerChildAtLeastOneOfOneOrTwoOfTwoQuery
		className = String("au.edu.anu.twcore.archetype.tw.ChildAtLeastOneOfOneOrTwoOfTwoQuery")
		nodeLabel1 = String("widget")
		nodeLabel2 = String("container")
	mustSatisfyQuery coordinateRanksAreDifferentQuery4
		className = String("au.edu.anu.twcore.archetype.tw.RankingPropertyQuery")
		parameters = StringTable(([2]"_CHILD","order"))


hasNode widgetSpec
	isOfClass = String("widget")
	hasParent = StringTable(([4]"bottom:","top:","tab:","container:"))
	multiplicity = IntegerRange("0..*")
	hasProperty widgetOrder
		hasName = String("order")
		type = String("Integer")
		multiplicity = IntegerRange("1..1")
	hasProperty widgetClass
		hasName = String("subclass")
		type = String("String")
		multiplicity = IntegerRange("1..1")
		mustSatisfyQuery widgetClassInValueSetQuery
			className = String("au.edu.anu.twcore.archetype.tw.IsInValueSetQuery")
			values = StringTable(([10]+
			"au.edu.anu.twuifx.widgets.SimpleDM0Widget",+
			"au.edu.anu.twuifx.widgets.SimpleDM2Widget",+
			"au.edu.anu.twuifx.widgets.SimpleTimeWidget",+
			"au.edu.anu.twuifx.widgets.SimpleControlWidget1",+
			"au.edu.anu.twuifx.widgets.SimpleControlWidget2",+
			"au.edu.anu.twuifx.widgets.SimpleControlWidget3",+
			"au.edu.anu.twuifx.widgets.SimpleTimeSeriesWidget",+
			"au.edu.anu.twuifx.widgets.SimpleXYPlotWidget",+
			"au.edu.anu.twuifx.widgets.SimpleSpatial2DWidget1",+
			"au.edu.anu.twuifx.widgets.SimpleGraphWidget1"))

	mustSatisfyQuery CheckSubArchetypeQuerySimpleDM0Widget
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.SimpleDM0Widget","3wSA-SimpleDM0Widget.ugt"))

	mustSatisfyQuery CheckSubArchetypeQuerySimpleDM2Widget
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.SimpleDM2Widget","3wSA-SimpleDM2Widget.ugt"))

	mustSatisfyQuery CheckSubArchetypeQueryTimeWidget
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.SimpleTimeWidget","3wSA-SimpleTimeWidget.ugt"))

	mustSatisfyQuery CheckSubArchetypeQuerySpaceWidget1
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.SimpleSpatial2DWidget1","3wSA-SimpleSpatial2DWidget1.ugt"))

	mustSatisfyQuery CheckSubArchetypeQueryPNWidget
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.SimpleControlWidget1","3wSA-SimpleControlWidget1.ugt"))

	mustSatisfyQuery CheckSubArchetypeQueryPNWidget2
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.SimpleControlWidget2","3wSA-SimpleControlWidget2.ugt"))

	mustSatisfyQuery CheckSubArchetypeQuerySimpleControlWidget
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.SimpleControlWidget3","3wSA-SimpleControlWidget3.ugt"))

	mustSatisfyQuery CheckSubArchetypeQuerySimpleXYPlotWidget
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.SimpleXYPlotWidget","3wSA-SimpleXYPlotWidget.ugt"))

	mustSatisfyQuery CheckSubArchetypeQuerySimpleTimeSeriesWidget
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.SimpleTimeSeriesWidget","3wSA-SimpleTimeSeriesWidget.ugt"))

	mustSatisfyQuery CheckSubArchetypeQuerySimpleGraphWidget
		className = String("au.edu.anu.twcore.archetype.tw.CheckSubArchetypeQuery")
		parameters = StringTable(([3]"subclass","au.edu.anu.twuifx.widgets.SimpleGraphWidget1","3wSA-SimpleGraphWidget1.ugt"))

